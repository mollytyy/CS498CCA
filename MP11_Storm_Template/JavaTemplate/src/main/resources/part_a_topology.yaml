# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

# topology definition
# name to be used when submitting
name: "part-A"

# topology configuration
# this will be passed to the submitter as a map of config options
config:
    storm.local.hostname: "localhost"
    topology.max.task.parallelism: 3
    # set this to true if you want to see more debug log
    # set it to false before submitting
    topology.debug: false

components:
  - id: "poolConfig"
    className: "org.apache.storm.redis.common.config.JedisPoolConfig"
    constructorArgs:
      - "localhost"
      - 6379
      - 2000
      - "uiuc_cs498_mp11"
      - 0

  # TODO
  # Task: implement the redis store mapper
  # src/main/java/edu/illinois/storm/WordCountStoreMapper.java
  # redis hash key for part A is "partAWordCount"
  # Hint: pass in the constructor argument to the class constructor by adding a contructorArgs element to the component.

# spout definitions
spouts:
  # TODO
  # Task: implement the random sentence spout
  # src/main/java/edu/illinois/storm/RandomSentenceSpout.java

# bolt definitions
bolts:
  # TODO
  # Task: implement the split sentences bolt
  # src/main/java/edu/illinois/storm/SplitSentenceBolt.java

  # TODO
  # Task: implement the word count bolt
  # src/main/java/edu/illinois/storm/WordCountBolt.java

  # TODO
  # Task: initialize RedisStoreBolt using poolConfig and storeMapper
  # ClassName is "org.apache.storm.redis.bolt.RedisStoreBolt"
  # Hint: check the constructor detail, reference existing components by their id 

# stream definitions
# stream definitions define connections between spouts and bolts.
streams:
  # TODO
  # Task: pipe output of sentences generating spout to split bolt

  # TODO
  # Task: pipe output of split bolt to word count bolt
  # Hint: choose the right grouping type to make problem easier

  # TODO
  # Task: pipe output of word count bolt to redis store bolt
